'use client';
import React, { useEffect, useState } from 'react';
import Link from 'next/link';
import './listings-page.css';
import dynamic from 'next/dynamic'

 
const BusinessMap = dynamic(() => import('./BusinessMap'), { ssr: false });



type ServiceTitle = 'Haircut' | 'Nail Clipping' | 'Bathing' | 'Teeth Cleaning' | 'Creative Grooming';

// const SERVICE_OPTIONS: ServiceTitle[] = [
//   'Haircut',
//   'Nail Clipping',
//   'Bathing',
//   'Teeth Cleaning',
//   'Creative Grooming'
// ];


type Service = {
  title: ServiceTitle;            // Updated key to lowercase
  description: string;     // Updated key to lowercase
  minimum_time: number;    // Updated key to lowercase
  price: number;           // Updated key to lowercase
};


// Define the type for a grooming service
type GroomingServiceProps = {
  business_id: number;
  business_name: string;
  address: string;
  lat:number;
  long:number;
  description: string;
  languages: [],
  sizes: ('small' | 'medium' | 'large')[];
  services: Service[];
  company_logo: string;
};



export default function GroomingPage() {
  const [services, setServices] = useState<GroomingServiceProps[]>([]); 
  const [selectedSize, setSelectedSize] = useState<'all' | 'small' | 'medium' | 'large'>('all');
  const [selectedService, setSelectedService] = useState<'all' | ServiceTitle >('all');
  // const [open, setOpen] = useState(false);
  // Fetch services data from the JSON file
  useEffect(() => {
    const fetchServices = async () => {
      try {
        const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/business-listings.json`);
        const data: GroomingServiceProps[] = await response.json();
        setServices(data);
      } catch (error) {
        console.error('Error fetching services:', error);
      }
    };
    fetchServices();
  }, []);

  if (!services.length) {
    return <div>Loading services...</div>;
  }

  // CHANGED: Filter services by size within each service object
  const displayServices = services.filter(service => {
    const sizeMatch = selectedSize === 'all' || service.sizes.includes(selectedSize);
    const serviceMatch = selectedService === 'all' || service.services.some(s => s.title === selectedService);
    return sizeMatch && serviceMatch;
  });

  return (
    <div className="grooming-page">
      <header className="header">
        <div className="header-container">
          <Link href="/" className="logo-container">
          <svg width="572" height="320" viewBox="0 0 572 320" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M388.126 46.8C388.126 49.3333 387.793 52.4667 387.126 56.2H386.926C382.926 56.8667 379.193 57.2 375.726 57.2C371.993 57.2 368.993 56.8667 366.726 56.2C366.993 55 367.126 53.2667 367.126 51C367.126 46.6 366.059 42.9333 363.926 40C361.793 36.9333 358.859 34.7333 355.126 33.4C352.459 32.4667 349.526 32 346.326 32C341.659 32 337.193 33.0667 332.926 35.2C328.659 37.2 325.326 40 322.926 43.6C320.526 47.2 319.526 51.2 319.926 55.6C321.659 65.7333 328.659 71 340.926 71.4C356.259 71.9333 367.793 75.4667 375.526 82C383.259 88.5333 387.126 96.8667 387.126 107C387.126 116.6 385.259 124.8 381.526 131.6C377.926 138.4 372.993 143.533 366.726 147C360.459 150.333 353.526 152 345.926 152C338.326 152 330.926 150.667 323.726 148C316.526 145.2 310.526 141.133 305.726 135.8C300.926 130.467 298.193 124.133 297.526 116.8V116.6C297.126 115 296.926 113.2 296.926 111.2V109.8C299.859 109.533 302.126 109.4 303.726 109.4L311.126 109.6C312.593 109.733 314.659 109.8 317.326 109.8C317.193 115.133 318.793 119.667 322.126 123.4C325.593 127.133 330.793 129.867 337.726 131.6C339.726 132.133 341.793 132.4 343.926 132.4C348.326 132.4 352.326 131.333 355.926 129.2C359.526 127.067 362.259 124.133 364.126 120.4C365.993 116.667 366.726 112.533 366.326 108C365.793 102.933 364.059 99.1333 361.126 96.6C358.326 94.0667 354.993 92.4 351.126 91.6C347.393 90.8 342.193 90.1333 335.526 89.6L327.926 89C321.126 87.9333 315.326 85.3333 310.526 81.2C305.726 76.9333 302.459 72 300.726 66.4C299.526 62.4 298.926 58.4667 298.926 54.6C298.926 50.3333 299.526 46.3333 300.726 42.6C302.593 36.3333 305.659 30.7333 309.926 25.8C314.326 20.7333 319.526 16.9333 325.526 14.4C330.726 12.2667 336.793 11.2 343.726 11.2C353.193 11.2 361.926 13 369.926 16.6C375.526 19.4 379.926 23.4 383.126 28.6C386.459 33.6667 388.126 39.7333 388.126 46.8ZM416.796 31.4V43.8V61.6C420.396 58.5333 423.53 56.2667 426.196 54.8C428.996 53.2 433.063 52.2 438.396 51.8C441.596 51.4 444.596 51.2 447.396 51.2C457.13 51.2 464.73 53.5333 470.196 58.2C471.93 59.6667 473.13 63.1333 473.796 68.6C474.463 74.0667 474.796 81.2667 474.796 90.2C474.796 95.2667 474.663 103.267 474.396 114.2C474.13 124.867 473.996 132.467 473.996 137C473.996 140.733 474.13 145.267 474.396 150.6C469.063 151.4 463.33 151.667 457.196 151.4C456.93 147.4 456.796 143.933 456.796 141V129V89.8C456.53 81.2667 454.53 75.7333 450.796 73.2C449.996 72.6667 448.396 72.1333 445.996 71.6C443.196 70.8 440.33 70.4 437.396 70.4C432.196 70.4 427.73 71.7333 423.996 74.4C420.396 76.9333 418.063 80.9333 416.996 86.4C416.063 91.4667 415.596 97.5333 415.596 104.6L415.796 111.4C416.063 120.2 416.196 127.467 416.196 133.2C416.196 140.4 416.063 145.933 415.796 149.8V150.6C413.13 151.267 410.996 151.6 409.396 151.6L403.396 151.4C401.53 151.4 399.996 151.467 398.796 151.6C398.796 136.267 398.73 123.6 398.596 113.6L398.396 52.4C398.396 37.4667 398.53 22.1333 398.796 6.39999C402.93 6.79999 406.263 6.93333 408.796 6.8C409.463 6.8 410.263 6.73333 411.196 6.59999C412.263 6.46666 413.33 6.39999 414.396 6.39999C415.73 6.39999 416.396 6.59999 416.396 6.99999C416.663 8.19999 416.796 16.3333 416.796 31.4ZM548.445 151.6C547.111 151.6 546.445 151.4 546.445 151C546.311 148.467 546.245 146.4 546.245 144.8C546.245 143.067 546.178 141.6 546.045 140.4C545.778 140.533 544.711 141.267 542.845 142.6C540.978 143.933 537.978 145.067 533.845 146C526.111 148.8 518.578 150.2 511.245 150.2C502.978 150.2 496.778 148.2 492.645 144.2C490.378 142.2 488.978 138.867 488.445 134.2C487.911 129.4 487.578 121.8 487.445 111.4V105.2C487.445 101.067 487.578 95 487.845 87C488.245 79 488.445 71.4 488.445 64.2C488.445 60.7333 488.311 56.4667 488.045 51.4C490.445 51.1333 493.711 51 497.845 51H504.445C504.845 55 505.045 59.7333 505.045 65.2L504.845 81.4C504.845 86.7333 504.911 90.6 505.045 93L505.245 98.6C505.245 103.4 505.445 109 505.845 115.4C506.111 119.8 506.978 123.133 508.445 125.4C510.045 127.667 512.378 129.2 515.445 130C518.111 130.4 520.578 130.6 522.845 130.6C530.711 130.6 536.711 128.467 540.845 124.2C545.111 119.933 547.311 114.133 547.445 106.8C547.578 102 547.378 93.2667 546.845 80.6C546.578 74.2 546.445 70 546.445 68C546.445 64.4 546.578 59.2667 546.845 52.6V51.8C548.978 51.2667 550.978 50.9333 552.845 50.8C554.845 50.6667 556.045 50.6 556.445 50.6C559.245 50.6 561.645 50.5333 563.645 50.4L563.845 84.8C564.111 100.533 564.245 112.333 564.245 120.2C564.245 126.6 564.111 136.733 563.845 150.6C560.911 150.6 557.645 150.8 554.045 151.2C553.378 151.2 552.511 151.267 551.445 151.4C550.511 151.533 549.511 151.6 548.445 151.6ZM388.126 206.8C388.126 209.333 387.793 212.467 387.126 216.2H386.926C382.926 216.867 379.193 217.2 375.726 217.2C371.993 217.2 368.993 216.867 366.726 216.2C366.993 215 367.126 213.267 367.126 211C367.126 206.6 366.059 202.933 363.926 200C361.793 196.933 358.859 194.733 355.126 193.4C352.459 192.467 349.526 192 346.326 192C341.659 192 337.193 193.067 332.926 195.2C328.659 197.2 325.326 200 322.926 203.6C320.526 207.2 319.526 211.2 319.926 215.6C321.659 225.733 328.659 231 340.926 231.4C356.259 231.933 367.793 235.467 375.526 242C383.259 248.533 387.126 256.867 387.126 267C387.126 276.6 385.259 284.8 381.526 291.6C377.926 298.4 372.993 303.533 366.726 307C360.459 310.333 353.526 312 345.926 312C338.326 312 330.926 310.667 323.726 308C316.526 305.2 310.526 301.133 305.726 295.8C300.926 290.467 298.193 284.133 297.526 276.8V276.6C297.126 275 296.926 273.2 296.926 271.2V269.8C299.859 269.533 302.126 269.4 303.726 269.4L311.126 269.6C312.593 269.733 314.659 269.8 317.326 269.8C317.193 275.133 318.793 279.667 322.126 283.4C325.593 287.133 330.793 289.867 337.726 291.6C339.726 292.133 341.793 292.4 343.926 292.4C348.326 292.4 352.326 291.333 355.926 289.2C359.526 287.067 362.259 284.133 364.126 280.4C365.993 276.667 366.726 272.533 366.326 268C365.793 262.933 364.059 259.133 361.126 256.6C358.326 254.067 354.993 252.4 351.126 251.6C347.393 250.8 342.193 250.133 335.526 249.6L327.926 249C321.126 247.933 315.326 245.333 310.526 241.2C305.726 236.933 302.459 232 300.726 226.4C299.526 222.4 298.926 218.467 298.926 214.6C298.926 210.333 299.526 206.333 300.726 202.6C302.593 196.333 305.659 190.733 309.926 185.8C314.326 180.733 319.526 176.933 325.526 174.4C330.726 172.267 336.793 171.2 343.726 171.2C353.193 171.2 361.926 173 369.926 176.6C375.526 179.4 379.926 183.4 383.126 188.6C386.459 193.667 388.126 199.733 388.126 206.8ZM416.796 191.4V203.8V221.6C420.396 218.533 423.53 216.267 426.196 214.8C428.996 213.2 433.063 212.2 438.396 211.8C441.596 211.4 444.596 211.2 447.396 211.2C457.13 211.2 464.73 213.533 470.196 218.2C471.93 219.667 473.13 223.133 473.796 228.6C474.463 234.067 474.796 241.267 474.796 250.2C474.796 255.267 474.663 263.267 474.396 274.2C474.13 284.867 473.996 292.467 473.996 297C473.996 300.733 474.13 305.267 474.396 310.6C469.063 311.4 463.33 311.667 457.196 311.4C456.93 307.4 456.796 303.933 456.796 301V289V249.8C456.53 241.267 454.53 235.733 450.796 233.2C449.996 232.667 448.396 232.133 445.996 231.6C443.196 230.8 440.33 230.4 437.396 230.4C432.196 230.4 427.73 231.733 423.996 234.4C420.396 236.933 418.063 240.933 416.996 246.4C416.063 251.467 415.596 257.533 415.596 264.6L415.796 271.4C416.063 280.2 416.196 287.467 416.196 293.2C416.196 300.4 416.063 305.933 415.796 309.8V310.6C413.13 311.267 410.996 311.6 409.396 311.6L403.396 311.4C401.53 311.4 399.996 311.467 398.796 311.6C398.796 296.267 398.73 283.6 398.596 273.6L398.396 212.4C398.396 197.467 398.53 182.133 398.796 166.4C402.93 166.8 406.263 166.933 408.796 166.8C409.463 166.8 410.263 166.733 411.196 166.6C412.263 166.467 413.33 166.4 414.396 166.4C415.73 166.4 416.396 166.6 416.396 167C416.663 168.2 416.796 176.333 416.796 191.4ZM548.445 311.6C547.111 311.6 546.445 311.4 546.445 311C546.311 308.467 546.245 306.4 546.245 304.8C546.245 303.067 546.178 301.6 546.045 300.4C545.778 300.533 544.711 301.267 542.845 302.6C540.978 303.933 537.978 305.067 533.845 306C526.111 308.8 518.578 310.2 511.245 310.2C502.978 310.2 496.778 308.2 492.645 304.2C490.378 302.2 488.978 298.867 488.445 294.2C487.911 289.4 487.578 281.8 487.445 271.4V265.2C487.445 261.067 487.578 255 487.845 247C488.245 239 488.445 231.4 488.445 224.2C488.445 220.733 488.311 216.467 488.045 211.4C490.445 211.133 493.711 211 497.845 211H504.445C504.845 215 505.045 219.733 505.045 225.2L504.845 241.4C504.845 246.733 504.911 250.6 505.045 253L505.245 258.6C505.245 263.4 505.445 269 505.845 275.4C506.111 279.8 506.978 283.133 508.445 285.4C510.045 287.667 512.378 289.2 515.445 290C518.111 290.4 520.578 290.6 522.845 290.6C530.711 290.6 536.711 288.467 540.845 284.2C545.111 279.933 547.311 274.133 547.445 266.8C547.578 262 547.378 253.267 546.845 240.6C546.578 234.2 546.445 230 546.445 228C546.445 224.4 546.578 219.267 546.845 212.6V211.8C548.978 211.267 550.978 210.933 552.845 210.8C554.845 210.667 556.045 210.6 556.445 210.6C559.245 210.6 561.645 210.533 563.645 210.4L563.845 244.8C564.111 260.533 564.245 272.333 564.245 280.2C564.245 286.6 564.111 296.733 563.845 310.6C560.911 310.6 557.645 310.8 554.045 311.2C553.378 311.2 552.511 311.267 551.445 311.4C550.511 311.533 549.511 311.6 548.445 311.6Z" fill="#F01B79"/>
<path d="M182.132 43.5679C181.884 44.3608 181.815 45.1985 181.928 46.0214C182.041 46.8442 182.334 47.6321 182.786 48.3289C186.905 53.6226 193.629 46.0385 189.743 41.5894C187.874 38.0948 182.84 40.2644 182.132 43.5679Z" fill="#F01B79"/>
<path d="M72.9902 310.632C93.8694 316.665 113.979 318.15 135.534 319.618C183.205 320.138 231.999 319.739 282.339 318.074C283.016 317.984 283.654 317.707 284.182 317.274C284.711 316.841 285.107 316.269 285.329 315.623C287.07 311.493 287.832 307.016 287.555 302.542C287.278 298.069 285.969 293.72 283.731 289.836C282.165 287.19 279.675 285.121 278.818 282.108C276.599 274.327 276.559 265.505 276.23 257.484C275.56 241.159 276.085 224.848 276.508 208.53C282.583 182.831 282.166 155.287 273.971 130.099C275.448 128.956 276.586 127.434 277.265 125.695C277.718 125.083 277.984 124.354 278.03 123.594C278.923 112.424 277.94 100.858 276.912 89.7221C274.881 67.4091 270.588 45.3602 264.098 23.9155C261.533 15.4734 259.787 5.05453 249.974 2.61364C235.012 -1.10898 218.145 -1.17208 203.713 4.49569C194.03 8.29763 186.136 14.7063 177.22 19.863C168.839 24.5615 160.104 28.5998 151.096 31.9412C142.347 35.5007 132.422 37.8199 125.203 44.1998C118.257 49.8396 121.736 64.3578 123.235 71.5191C125.275 81.2692 129.364 91.7313 138.776 96.5031C149.344 101.859 163.271 99.9562 174.722 99.6452C179.512 99.5145 184.318 99.2279 189.108 98.7655C141.59 147.737 102.07 220.691 126.816 289.532C126.319 289.591 125.837 289.746 125.4 289.99C98.8098 289.247 68.4907 283.082 53.1495 259.089C42.1781 241.991 41.5345 205.99 66.7402 200.681C74.3477 200.088 83.3009 201.365 87.3192 193.404C89.4626 189.156 87.9664 184.244 84.8323 180.854C87.7604 180.535 90.7083 180.435 93.6513 180.554C98.4213 180.781 103.228 182.526 107.818 180.361C115.701 176.643 112.678 168.696 110.883 162.053C116.296 160.91 121.712 159.748 127.088 158.455C131.647 157.358 134.84 155.637 136.758 151.264C140.537 142.737 137.569 134.208 131.761 127.422C114.959 108.282 79.8045 107.296 58.5279 118.523C-20.4449 162.483 -23.1985 286.449 72.9902 310.632ZM164.211 92.8895C171.371 87.7175 175.639 79.6494 177.856 71.2676C179.023 66.8879 172.218 65.0158 171.072 69.3973C168.3 80.9348 161.32 89.7167 149.583 92.2541C136.141 90.9723 131.327 78.1279 129.349 66.4841C130.634 64.933 132.297 63.7393 134.178 63.0184C142.962 59.8447 143.81 50.5489 141.232 42.7323C152.818 38.5068 164.487 34.4398 175.484 28.8333C190.857 20.4345 203.39 9.11966 221.68 8.02451C206.348 22.5509 204.809 68.1003 203.838 89.2047C190.659 91.5285 177.68 92.4388 164.211 92.8895ZM138.49 186.835C151.908 153.191 174.364 123.791 198.923 97.5378C200.546 97.2855 202.157 97.0141 203.765 96.7095C204.356 105.596 202.323 116.247 207.608 124.021C211.795 129.556 220.004 130.227 226.335 131.257C240.158 133.411 254.35 134.188 268.257 132.422C276.533 166.086 273.824 190.702 265.553 220.325C263.677 223.66 260.325 221.767 259.479 218.483C258.991 199.194 258.155 179.783 255.459 160.851C254.905 157.946 250.502 158.734 250.437 161.531C250.734 182.303 252.891 203.099 252.714 223.905C252.907 239.373 252.804 254.848 252.207 270.306C252.039 274.582 251.509 278.936 252.254 283.157C252.233 283.376 252.213 283.591 252.192 283.81C251.988 284.404 251.982 285.049 252.176 285.647C252.089 286.076 252.176 286.521 252.417 286.886C254.607 290.268 257.748 292.755 259.57 296.44C261.482 300.575 263.431 307.368 258.572 309.866C257.453 310.014 256.353 310.286 255.294 310.677C250.728 310.73 246.912 311.013 242.337 310.603C245.109 300.548 240.615 289.988 230.169 286.056C233.722 254.378 236.874 221.544 233.749 189.76C233.329 187.59 229.603 187.494 229.267 189.76C227.824 200.994 228.737 212.483 227.951 223.782C219.839 206.946 197.625 207.106 184.011 216.969C178.424 220.895 173.287 225.425 168.693 230.478C163.889 235.548 158.452 241.204 155.226 247.457C153.667 250.477 157.456 253.618 160.003 251.143C167.85 242.83 174.654 233.351 183.756 226.256C207.136 207.585 228.103 220.094 224.038 249.533C222.737 261.888 217.352 273.345 211.393 284.066C206.063 284.327 200.751 284.876 195.48 285.711C191.674 286.287 187.548 286.258 184.671 289.054C178.201 300.435 243.169 276.429 234.599 309.001C217.091 309.75 199.578 310.373 182.069 311.074C170.129 310.956 148.693 312.196 141.09 300.903C122.024 263.458 122.96 225.294 138.49 186.835ZM27.8077 156.579C40.9054 137.078 59.7465 122.413 83.3848 119.116C100.357 117.83 121.12 121.32 129.72 137.836C135.301 160.694 103.237 150.545 103.347 159.413C104.56 166.569 111.263 176.395 98.2527 174.191C90.312 173.268 82.2713 173.731 74.4892 175.561C71.5805 176.21 71.5057 179.299 73.0669 181.003C73.8502 183.428 77.4114 182.829 79.2736 184.033C83.1946 186.772 82.8133 191.663 78.2758 193.324C74.0728 194.715 69.4641 192.332 65.2268 193.645C60.8318 193.916 56.6495 196.232 53.3838 198.455C37.8137 205.004 31.2518 235.47 30.8435 250.786C30.3724 252.562 29.7864 254.306 29.0894 256.007C22.9331 261.612 15.9296 256.465 12.4215 250.116C1.86561 219.939 9.34692 183.196 27.8077 156.579Z" fill="#F01B79"/>
</svg>
            <h1 className="brand-name">
            ShuShu
            </h1>
          </Link>
          <nav className="nav-menu">
            <Link href="/" className="nav-link">Home</Link>
            <Link href="#" className="nav-link">Contact</Link>
          </nav>
        </div>
      </header>

      <main className="main-content">
        <div className="container">
          <section className="page-intro">
            <h2 className="page-title">Grooming Services</h2>
            <p className="page-description">
              Every pup deserves to look and feel their best. Choose the perfect grooming package for your furry friend!
            </p>
          </section>


          <section className="filters">
            <div className="filter-group">
              <h3>Filter by Size:</h3>
              <div className="filter-buttons">
                <button 
                  className={`filter-button ${selectedSize === 'all' ? 'active' : ''}`}
                  onClick={() => setSelectedSize('all')}
                >
                  All Sizes
                </button>
                <button 
                  className={`filter-button ${selectedSize === 'small' ? 'active' : ''}`}
                  onClick={() => setSelectedSize('small')}
                >
                  Small Dogs
                </button>
                <button 
                  className={`filter-button ${selectedSize === 'medium' ? 'active' : ''}`}
                  onClick={() => setSelectedSize('medium')}
                >
                  Medium Dogs
                </button>
                <button 
                  className={`filter-button ${selectedSize === 'large' ? 'active' : ''}`}
                  onClick={() => setSelectedSize('large')}
                >
                  Large Dogs
                </button>
              </div>
            </div>

            <div className="filter-group">
              <h3>Filter by Service:</h3>
              <div className="filter-buttons">
                <button 
                  className={`filter-button ${selectedService === 'all' ? 'active' : ''}`}
                  onClick={() => setSelectedService('all')}
                >
                  All Services
                </button>
                <button 
                  className={`filter-button ${selectedService === 'Haircut' ? 'active' : ''}`}
                  onClick={() => setSelectedService('Haircut')}
                >
                  Haircut
                </button>
                <button 
                  className={`filter-button ${selectedService === 'Nail Clipping' ? 'active' : ''}`}
                  onClick={() => setSelectedService('Nail Clipping')}
                >
                  Nail Clipping
                </button>
                <button 
                  className={`filter-button ${selectedService === 'Bathing' ? 'active' : ''}`}
                  onClick={() => setSelectedService('Bathing')}
                >
                  Bathing
                </button>
                <button 
                  className={`filter-button ${selectedService === 'Teeth Cleaning' ? 'active' : ''}`}
                  onClick={() => setSelectedService('Teeth Cleaning')}
                >
                  Teeth Cleaning
                </button>
                <button 
                  className={`filter-button ${selectedService === 'Creative Grooming' ? 'active' : ''}`}
                  onClick={() => setSelectedService('Creative Grooming')}
                >
                  Creative Grooming
                </button>
              </div>
            </div>
          </section>

<div className='double-page-split'>
          <section className="services-grid">
            {displayServices.map((service, index) => (
              <div key={index} className="service-card">
                <div className="logo-and-name">
                <img className="business-logo" src={service.company_logo} alt={service.business_name} />
                <h3 className="business-name">{service.business_name}</h3>
                </div>
                <div className="service-price-duration">
                  <span className="service-price">{service.address}</span>
                  <Link href={`/listings/${service.business_id}`}>
              <button>View & Book</button>
            </Link>
                </div>
                <p className="service-description">{service.description}</p>


                <h2>Services Offered:</h2>
      <ul className="service-includes">
        {service.services.map((service, index) => (
          <li key={index}>
            <div className="title-and-description">
            <p>{service.title}</p> {/* Use lowercase title */}
            <p>{service.description}</p> {/* Use lowercase description */}
            </div>
            <div className="time-and-price">
            <p>Duration: {Math.ceil(service.minimum_time / 10) * 10} minutes</p> {/* Use lowercase minimum_time */}
            <p>Price: ${service.price}</p> {/* Use lowercase price */}
            </div>
          </li>
        ))}
      </ul>
                <ul className="service-includes">
                  <strong>Languages spoken </strong>
                  {service.languages.map((item, idx) => (
                    <li key={idx} className="service-include-item">
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </section>

          <BusinessMap businesses={displayServices} /> {/* Pass the listing as an array */}
          </div>
        </div>
      </main>

      <footer className="footer">
        <div className="footer-content">
          <p className="footer-tagline">Every tail we groom has a happy ending! 🐾</p>
          <p className="footer-subtitle">Make your furry friend the talk of the dog park.</p>
        </div>
      </footer>
    </div>
  );
}
